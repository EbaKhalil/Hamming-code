
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HITECH
 */
public class MyFrame extends javax.swing.JFrame {

    /**
     * Creates new form MyFrame
     */
    public MyFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnHammingCode = new javax.swing.JButton();
        btnErrorBit = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnShowResult = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        panelFindHammingCode = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        inputLabel = new javax.swing.JLabel();
        txtInput = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cmbParity = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        resultLabel = new javax.swing.JLabel();
        txtOutput = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtP1S = new javax.swing.JTextField();
        txtP1P = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtP2S = new javax.swing.JTextField();
        txtP2P = new javax.swing.JTextField();
        txtP4S = new javax.swing.JTextField();
        txtP4P = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtP8S = new javax.swing.JTextField();
        txtP8P = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtError = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Hamming Code ");

        jPanel1.setBackground(new java.awt.Color(255, 204, 204));

        btnHammingCode.setBackground(new java.awt.Color(102, 153, 255));
        btnHammingCode.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHammingCode.setForeground(new java.awt.Color(255, 255, 255));
        btnHammingCode.setText("Find Hamming Code");
        btnHammingCode.setBorder(null);
        btnHammingCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHammingCodeActionPerformed(evt);
            }
        });

        btnErrorBit.setBackground(new java.awt.Color(102, 153, 255));
        btnErrorBit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnErrorBit.setForeground(new java.awt.Color(255, 255, 255));
        btnErrorBit.setText("Find Error Bit");
        btnErrorBit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnErrorBitActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 204, 153));

        btnShowResult.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnShowResult.setText("Show Result");
        btnShowResult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowResultActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnClear.setText("Clear ");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(btnShowResult, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(54, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnShowResult, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(btnClear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(37, 37, 37))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnHammingCode, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(btnErrorBit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(btnHammingCode, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnErrorBit, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(16, Short.MAX_VALUE))
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jLayeredPane1.setBackground(new java.awt.Color(204, 255, 204));

        panelFindHammingCode.setBackground(new java.awt.Color(255, 153, 204));

        titleLabel.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        titleLabel.setForeground(new java.awt.Color(255, 255, 255));
        titleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLabel.setText("Find Hamming Code");

        inputLabel.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        inputLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        inputLabel.setText("Data (encoded data)");

        txtInput.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtInput.setForeground(new java.awt.Color(0, 0, 255));
        txtInput.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Parity type");

        cmbParity.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        cmbParity.setForeground(new java.awt.Color(0, 0, 255));
        cmbParity.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Even parity", "Odd  parity" }));

        jPanel4.setBackground(new java.awt.Color(204, 255, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255), 2));

        resultLabel.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        resultLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        resultLabel.setText("Hamming Code");

        txtOutput.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtOutput.setForeground(new java.awt.Color(255, 0, 51));
        txtOutput.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel5.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 102, 0));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("P1");

        txtP1S.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtP1S.setForeground(new java.awt.Color(255, 153, 0));
        txtP1S.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtP1P.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtP1P.setForeground(new java.awt.Color(255, 153, 0));
        txtP1P.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel6.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 102, 0));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("P2");

        jLabel7.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 102, 0));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("P4");

        txtP2S.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtP2S.setForeground(new java.awt.Color(255, 153, 0));
        txtP2S.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtP2P.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtP2P.setForeground(new java.awt.Color(255, 153, 0));
        txtP2P.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtP4S.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtP4S.setForeground(new java.awt.Color(255, 153, 0));
        txtP4S.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtP4P.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtP4P.setForeground(new java.awt.Color(255, 153, 0));
        txtP4P.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel8.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 102, 0));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("P8");

        txtP8S.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtP8S.setForeground(new java.awt.Color(255, 153, 0));
        txtP8S.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtP8P.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtP8P.setForeground(new java.awt.Color(255, 153, 0));
        txtP8P.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel9.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Percentage Error");

        txtError.setFont(new java.awt.Font("sansserif", 1, 14)); // NOI18N
        txtError.setForeground(new java.awt.Color(255, 0, 0));
        txtError.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtP2S, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtP1S, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtP4S, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtP8S, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel9)
                        .addGap(46, 46, 46)
                        .addComponent(txtError, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(txtOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 46, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtP2P, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtP1P, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtP4P, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtP8P, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(resultLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(resultLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtOutput, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtP1S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtP1P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtP2S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtP2P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtP4S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtP4P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtP8S, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtP8P, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtError))
                .addGap(15, 15, 15))
        );

        txtOutput.setEditable(false);
        txtP1S.setEditable(false);
        txtP1P.setEditable(false);
        txtP2S.setEditable(false);
        txtP2P.setEditable(false);
        txtP4S.setEditable(false);
        txtP4P.setEditable(false);
        txtP8S.setEditable(false);
        txtP8P.setEditable(false);
        txtError.setEditable(false);

        javax.swing.GroupLayout panelFindHammingCodeLayout = new javax.swing.GroupLayout(panelFindHammingCode);
        panelFindHammingCode.setLayout(panelFindHammingCodeLayout);
        panelFindHammingCodeLayout.setHorizontalGroup(
            panelFindHammingCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFindHammingCodeLayout.createSequentialGroup()
                .addGroup(panelFindHammingCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFindHammingCodeLayout.createSequentialGroup()
                        .addGap(196, 196, 196)
                        .addComponent(titleLabel))
                    .addGroup(panelFindHammingCodeLayout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(panelFindHammingCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cmbParity, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtInput)
                            .addComponent(inputLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(58, 58, 58)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelFindHammingCodeLayout.setVerticalGroup(
            panelFindHammingCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelFindHammingCodeLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(titleLabel)
                .addGroup(panelFindHammingCodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelFindHammingCodeLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(49, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelFindHammingCodeLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(inputLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtInput, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbParity, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(124, 124, 124))))
        );

        jLayeredPane1.setLayer(panelFindHammingCode, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFindHammingCode, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelFindHammingCode, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHammingCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHammingCodeActionPerformed
        // TODO add your handling code here:
        panelFindHammingCode.setVisible(true);
        inputLabel.setText("Data (Encoded Data)");
        resultLabel.setText("Hamming Code");
        titleLabel.setText("Find Hamming Code");
    }//GEN-LAST:event_btnHammingCodeActionPerformed

    private void btnErrorBitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnErrorBitActionPerformed
        // TODO add your handling code here:
        panelFindHammingCode.setVisible(true);
        inputLabel.setText("Received Data");
        resultLabel.setText("Error Bit");
        titleLabel.setText("Find Error Bit (Index)");
    }//GEN-LAST:event_btnErrorBitActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        txtInput.setText("");
        cmbParity.setSelectedIndex(0);
        txtOutput.setText("");
        txtError.setText("");
        txtP1S.setText("");txtP2S.setText("");txtP4S.setText("");txtP8S.setText("");
        txtP1P.setText("");txtP2P.setText("");txtP4P.setText("");txtP8P.setText("");
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnShowResultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowResultActionPerformed
        // TODO add your handling code here:
        if(txtInput.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(MyFrame.this,"Empty data ... !","Empty",JOptionPane.WARNING_MESSAGE);
            return;
        }
        else if(titleLabel.getText().equals("Find Hamming Code"))
        {
            if(!HammingCode.isValidData(txtInput.getText()))
            {
                JOptionPane.showMessageDialog(MyFrame.this,"Invalid data ... !","Empty",JOptionPane.WARNING_MESSAGE);
                return;
            }
            else
            {
                txtError.setText("50 %");
                if(cmbParity.getSelectedIndex()==0)//even parity
                {
                    txtOutput.setText(HammingCode.findActualTransmittedData(txtInput.getText(),"EVEN"));
                    txtP1S.setText(HammingCode.getP1(HammingCode.findFirstTransmittedData(txtInput.getText())));
                    txtP2S.setText(HammingCode.getP2(HammingCode.findFirstTransmittedData(txtInput.getText())));
                    txtP4S.setText(HammingCode.getP4(HammingCode.findFirstTransmittedData(txtInput.getText())));
                    txtP8S.setText(HammingCode.getP8(HammingCode.findFirstTransmittedData(txtInput.getText())));
                    txtP1P.setText(HammingCode.findParityBit(txtP1S.getText(),"EVEN")+"");
                    txtP2P.setText(HammingCode.findParityBit(txtP2S.getText(),"EVEN")+"");
                    txtP4P.setText(HammingCode.findParityBit(txtP4S.getText(),"EVEN")+"");
                    txtP8P.setText(HammingCode.findParityBit(txtP8S.getText(),"EVEN")+""); 
                }
                else //odd parity 
                {
                    txtOutput.setText(HammingCode.findActualTransmittedData(txtInput.getText(),"ODD"));
                    txtP1S.setText(HammingCode.getP1(HammingCode.findFirstTransmittedData(txtInput.getText())));
                    txtP2S.setText(HammingCode.getP2(HammingCode.findFirstTransmittedData(txtInput.getText())));
                    txtP4S.setText(HammingCode.getP4(HammingCode.findFirstTransmittedData(txtInput.getText())));
                    txtP8S.setText(HammingCode.getP8(HammingCode.findFirstTransmittedData(txtInput.getText())));
                    txtP1P.setText(HammingCode.findParityBit(txtP1S.getText(),"ODD")+"");
                    txtP2P.setText(HammingCode.findParityBit(txtP2S.getText(),"ODD")+"");
                    txtP4P.setText(HammingCode.findParityBit(txtP4S.getText(),"ODD")+"");
                    txtP8P.setText(HammingCode.findParityBit(txtP8S.getText(),"ODD")+""); 
                }
            }
        }
        else if(titleLabel.getText().equals("Find Error Bit (Index)"))
        {
            if(!HammingCode.isValidRD(txtInput.getText()))
            {
                JOptionPane.showMessageDialog(MyFrame.this,"Invalid data ... !","Empty",JOptionPane.WARNING_MESSAGE);
                return;
            }
            else
            {
                txtError.setText("50 %");
                if(cmbParity.getSelectedIndex()==0)//even parity
                {
                    if(HammingCode.findError(txtInput.getText(),"EVEN")==0)
                        txtOutput.setText("No Error");
                    else
                        txtOutput.setText(HammingCode.findError(txtInput.getText(),"EVEN")+"");
                    txtP1S.setText(HammingCode.getP1(txtInput.getText()));
                    txtP2S.setText(HammingCode.getP2(txtInput.getText()));
                    txtP4S.setText(HammingCode.getP4(txtInput.getText()));
                    txtP8S.setText(HammingCode.getP8(txtInput.getText()));
                    txtP1P.setText(HammingCode.findParityBit(txtP1S.getText(),"EVEN")+"");
                    txtP2P.setText(HammingCode.findParityBit(txtP2S.getText(),"EVEN")+"");
                    txtP4P.setText(HammingCode.findParityBit(txtP4S.getText(),"EVEN")+"");
                    txtP8P.setText(HammingCode.findParityBit(txtP8S.getText(),"EVEN")+""); 
                }
                else //odd parity 
                {
                    if(HammingCode.findError(txtInput.getText(),"ODD")==0)
                        txtOutput.setText("No Error");
                    else
                        txtOutput.setText(HammingCode.findError(txtInput.getText(),"ODD")+"");
                    txtP1S.setText(HammingCode.getP1(txtInput.getText()));
                    txtP2S.setText(HammingCode.getP2(txtInput.getText()));
                    txtP4S.setText(HammingCode.getP4(txtInput.getText()));
                    txtP8S.setText(HammingCode.getP8(txtInput.getText()));
                    txtP1P.setText(HammingCode.findParityBit(txtP1S.getText(),"ODD")+"");
                    txtP2P.setText(HammingCode.findParityBit(txtP2S.getText(),"ODD")+"");
                    txtP4P.setText(HammingCode.findParityBit(txtP4S.getText(),"ODD")+"");
                    txtP8P.setText(HammingCode.findParityBit(txtP8S.getText(),"ODD")+"");
                }
            }
        }
    }//GEN-LAST:event_btnShowResultActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                MyFrame F = new MyFrame();
                F.setVisible(true);
                F.setResizable(false);
                F.setLocationRelativeTo(null);
                F.panelFindHammingCode.setVisible(true);
                F.inputLabel.setText("Data (Encoded Data)");
                F.resultLabel.setText("Error Bit");
                F.titleLabel.setText("Find Hamming Code");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnErrorBit;
    private javax.swing.JButton btnHammingCode;
    private javax.swing.JButton btnShowResult;
    private javax.swing.JComboBox<String> cmbParity;
    private javax.swing.JLabel inputLabel;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel panelFindHammingCode;
    private javax.swing.JLabel resultLabel;
    private javax.swing.JLabel titleLabel;
    private javax.swing.JTextField txtError;
    private javax.swing.JTextField txtInput;
    private javax.swing.JTextField txtOutput;
    private javax.swing.JTextField txtP1P;
    private javax.swing.JTextField txtP1S;
    private javax.swing.JTextField txtP2P;
    private javax.swing.JTextField txtP2S;
    private javax.swing.JTextField txtP4P;
    private javax.swing.JTextField txtP4S;
    private javax.swing.JTextField txtP8P;
    private javax.swing.JTextField txtP8S;
    // End of variables declaration//GEN-END:variables
}
